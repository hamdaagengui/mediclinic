<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:jdbc="http://www.springframework.org/schema/jdbc"
        xmlns:cloud="http://schema.cloudfoundry.org/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/jdbc
		   http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		   http://schema.cloudfoundry.org/spring 
    		http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.6.xsd">

	<description>MediApp Data Access Object Application Context</description>
	
	<!-- PropertyPlaceholderConfigurer used to abstract away the environment information into a properties file  -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:resources/common/properties/datasource.properties"/>
		<property name="placeholderPrefix" value="$mediAppDataSource{"/>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>
	<!-- PropertyPlaceholderConfigurer used to abstract away the environment information into a properties file  -->


	<!-- Development datasource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="$mediAppDataSource{mediApp.jdbc.driverClassName}"/>
		<property name="url" value="$mediAppDataSource{mediApp.jdbc.url}"/>
        <property name="username" value="$mediAppDataSource{mediApp.jdbc.username}"/>
        <property name="password" value="$mediAppDataSource{mediApp.jdbc.password}"/>
        <property name="initialSize" value="1"/>
        <property name="maxActive" value="20"/>
    </bean>


	<!-- Cloud Development datasource -->
<!-- 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/test" />
		<property name="username" value="spring" />
		<property name="password" value="spring" />
		<property name="initialSize" value="1"/>
		<property name="maxActive" value="20"/>
		
	</bean>

    	<cloud:data-source id="dataSource" />
 -->    	
    <!-- Cloud Development datasource -->
    
	<!-- Development datasource -->
	<jdbc:initialize-database data-source="dataSource" enabled="#{systemProperties.REBUILDDB}">
  		<!--<jdbc:script location="classpath:createDatabase.sql"/>-->
  		<jdbc:script location="classpath:create_tables.sql"/>
  		<jdbc:script location="classpath:Create_codeDecode.sql"/>
  		<jdbc:script location="classpath:otherMetaData.sql"/>
  		<jdbc:script location="classpath:log.sql" separator="//"/>
  		<jdbc:script location="classpath:currval.sql" separator="//"/>
  		<jdbc:script location="classpath:nextval.sql" separator="//"/>
  		<jdbc:script location="classpath:bulknextval.sql" separator="//"/>
  		<jdbc:script location="classpath:inboundTrigger.sql" separator="//"/>
  		<jdbc:script location="classpath:create_triggers.sql" separator="//"/>
  		<jdbc:script location="classpath:create_calendar.sql" separator="//"/>
	</jdbc:initialize-database>


    <!-- Production datasource commented for now --><!--
    <bean id="JndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="$mediAppDataSource{mediApp.jdbc.datasource}" />
		 Setting these two properties ensures that 
			 Spring does not eagerly lookup the DataSource from JNDI 
		<property name="lookupOnStartup">
			<value>false</value>
		</property>
		<property name="proxyInterface">
			<value>javax.sql.DataSource</value>
		</property>
	</bean>
    --><!-- Production datasource -->

    <!-- Spring Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>
    <!-- Spring Transaction Manager -->

    <!-- SqlMapClient Configuration -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:resources/common/ibatis/SqlMapConfig.xml</value>
		</property>
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>
    <!-- SqlMapClient Configuration -->

    <!-- Abstract spring bean definition of the mediAppBaseDAOImpl class -->
	<bean id="mediAppBaseDAOImpl" class="com.mediapp.core.common.dao.impl.MediAppBaseDAOImpl" abstract="true">
		<property name="sqlMapClient"><ref local="sqlMapClient"/></property>
	</bean>
    <!-- Abstract spring bean definition of the mediAppBaseDAOImpl class -->
	
</beans>